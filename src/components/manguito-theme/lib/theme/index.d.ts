import MCLTheme from './theme.js';
import type { Alignment, BodyText, ColorPalette, FontWeight, HeadingSize, OpacityRange, Range, SpacingLevel } from './theme.types.js';
/**
 * @TailwindCSS - Good practice is to let all of used classes to be in full instead of generated dynamically using methods such as string literal.
 * @Interface - ClassType to define the case, and Input type to generate tailwind clssname.
 * @Export GenerateMCLClass - extends MCLTheme class
 */
export declare const colorType: readonly ["BGCOLOR", "BEFOREBG", "AFTERBG", "HVBGCOLOR", "FCBGCOLOR", "ACTIVEBG", "TEXTCOLOR", "HVTEXTCOLOR", "FCTEXTCOLOR", "DISABLEDTEXTCOLOR", "SVGFILL", "RINGCOLOR", "FOCUSRING", "ACTIVERING", "OFFSETRING", "DUMMYCOLOR", "BTNCOLOR", "LISTCOLOR", "BORDER", "BORDERX", "BORDERY", "BORDERT", "BORDERB", "BORDERL", "BORDERR"];
export declare const textType: readonly ["H1", "H2", "H3", "H4", "BODYTEXT", "FONTWEIGHT", "TEXTALIGN"];
export declare const borderWidthType: readonly ["BORDERW", "BORDERXW", "BORDERYW", "BORDERTW", "BORDERBW", "BORDERLW", "BORDERRW"];
export declare const scaleType: readonly ["BGOPACITY", "OPACITY"];
export declare const spacingType: readonly ["MARGIN", "MARGINX", "MARGINY", "MARGINT", "MARGINB", "MARGINL", "MARGINR", "PADDING", "PADDINGX", "PADDINGY", "PADDINGT", "PADDINGB", "PADDINGL", "PADDINGR", "GAP"];
declare const allType: readonly ["BGCOLOR", "BEFOREBG", "AFTERBG", "HVBGCOLOR", "FCBGCOLOR", "ACTIVEBG", "TEXTCOLOR", "HVTEXTCOLOR", "FCTEXTCOLOR", "DISABLEDTEXTCOLOR", "SVGFILL", "RINGCOLOR", "FOCUSRING", "ACTIVERING", "OFFSETRING", "DUMMYCOLOR", "BTNCOLOR", "LISTCOLOR", "BORDER", "BORDERX", "BORDERY", "BORDERT", "BORDERB", "BORDERL", "BORDERR", "H1", "H2", "H3", "H4", "BODYTEXT", "FONTWEIGHT", "TEXTALIGN", "BORDERW", "BORDERXW", "BORDERYW", "BORDERTW", "BORDERBW", "BORDERLW", "BORDERRW", "BGOPACITY", "OPACITY", "MARGIN", "MARGINX", "MARGINY", "MARGINT", "MARGINB", "MARGINL", "MARGINR", "PADDING", "PADDINGX", "PADDINGY", "PADDINGT", "PADDINGB", "PADDINGL", "PADDINGR", "GAP"];
export type ClassType = (typeof allType)[number];
export type ColorClassType = (typeof colorType)[number];
export type TextClassType = (typeof textType)[number];
export type BorderWidthClassType = (typeof borderWidthType)[number];
export type ScaleClassType = (typeof scaleType)[number];
export type SpacingClassType = (typeof spacingType)[number];
export type InputType = ColorPalette | HeadingSize | BodyText | FontWeight | Range<1, 12> | OpacityRange | SpacingLevel | Alignment;
declare class GenerateMCLClass extends MCLTheme {
    classType: ClassType;
    classValue: InputType;
    constructor(classType: ClassType, classValue: InputType);
    generateColorClass(): string;
    generateTextClass(): string;
    generateBorderWidthClass(): string;
    generateScaleClass(): string;
    generateSpacingClass(): string;
    getBgColorClass(): string;
    getHoverBgColorClass(): string;
    getFocusBgColorClass(): string;
    getBeforeBgColorClass(): string;
    getAfterBgColorClass(): string;
    getActiveBgColorClass(): string;
    getTextColorClass(): string;
    getHoverTextColorClass(): string;
    getFocusTextColorClass(): string;
    getDisabledTextColorClass(): string;
    getSvgFillColorClass(): string;
    getRingColorClass(): string;
    getFocusRingColorClass(): string;
    getActiveRingColorClass(): string;
    getRingOffsetColorClass(): string;
    getBtnColorClass(): string;
    getListColorClass(): string;
    getBorderColorClass(): string;
    getBorderXColorClass(): string;
    getBorderYColorClass(): string;
    getBorderTopColorClass(): string;
    getBorderBottomColorClass(): string;
    getBorderLeftColorClass(): string;
    getBorderRightColorClass(): string;
    getH1Class(): string;
    getH2Class(): string;
    getH3Class(): string;
    getH4Class(): string;
    getBodyTextSizeClass(): string;
    getFontWeightClass(): string;
    getTextAlignClass(): string;
    getBorderWidthClass(): string;
    getBorderXWidthClass(): string;
    getBorderYWidthClass(): string;
    getBorderTopWidthClass(): string;
    getBorderBottomWidthClass(): string;
    getBorderLeftWidthClass(): string;
    getBorderRightWidthClass(): string;
    getOpacityClass(): string;
    getBgOpacityClass(): string;
    getMarginClass(): string;
    getMarginXClass(): string;
    getMarginYClass(): string;
    getMarginTopClass(): string;
    getMarginBottomClass(): string;
    getMarginLeftClass(): string;
    getMarginRightClass(): string;
    getPaddingClass(): string;
    getPaddingXClass(): string;
    getPaddingYClass(): string;
    getPaddingTopClass(): string;
    getPaddingBottomClass(): string;
    getPaddingLeftClass(): string;
    getPaddingRightClass(): string;
    getGapClass(): string;
    validateColorType(): boolean;
    validateSpaceType(): boolean;
    validateHeadingTextSizeType(): boolean;
    validateBodyTextSizeType(): boolean;
    validateFontWeightType(): boolean;
    validateOpacityType(): boolean;
    validateRangeType(): boolean;
    validateAlignment(): boolean;
    dummyMethod(): any;
}
export default GenerateMCLClass;
